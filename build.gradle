import java.text.SimpleDateFormat

plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id "org.ajoberstar.grgit" version "4.1.0"
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.10'
}

version = project.mod_version + "+" + new SimpleDateFormat("MMddHHmm").format(new Date())
group = project.maven_group

repositories {
    mavenCentral()
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
 //   implementation 'org.bouncycastle:'
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // Kotlin support
    modImplementation("net.fabricmc:fabric-language-kotlin:1.9.2+kotlin.1.8.10")
    // MaLiLib, required on client
    modImplementation "curse.maven:malilib-303119:4623483"
    // carpet, required on client & server
    modImplementation "curse.maven:carpet-349239:4573334"
    // Game test
    testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"
    // Conditional Mixin
    include(modImplementation("com.github.Fallen-Breath:conditional-mixin:v0.3.2"))
    include(implementation("org.bouncycastle:bcprov-jdk18on:1.76"))
    include(implementation("org.bouncycastle:bcpg-jdk18on:1.76"))
    include(implementation("com.squareup.okhttp3:okhttp:4.11.0"))
    include(implementation("org.eclipse.jgit:org.eclipse.jgit:6.6.0.202305301015-r"))
    modImplementation "curse.maven:litematica-308892:4626718"
    modImplementation "maven.modrinth:modmenu:7.2.1"
}

test {
    useJUnitPlatform()
}

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/reden.accesswidener")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

kotlin {
    jvmToolchain(17)
}

java {
    withSourcesJar()
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
